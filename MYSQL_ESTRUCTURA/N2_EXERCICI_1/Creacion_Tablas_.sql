-- MySQL Script generated by MySQL Workbench
-- Wed Mar 16 18:04:53 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Youtube
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Youtube` DEFAULT CHARACTER SET utf8 ;
USE `Youtube` ;

-- -----------------------------------------------------
-- Table `Youtube`.`CANAL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`CANAL` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`CANAL` (
  `id_canal` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NULL,
  `fecha_creacion` DATE NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_canal`),
  INDEX `fk_CANAL_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_CANAL_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`COMENTARIOS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`COMENTARIOS` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`COMENTARIOS` (
  `id_comentario` INT NOT NULL AUTO_INCREMENT,
  `contenido` VARCHAR(45) NOT NULL,
  `dia_hora_comentario` DATETIME NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  `VIDEO_id_video` INT NOT NULL,
  PRIMARY KEY (`id_comentario`),
  INDEX `fk_COMENTARIOS_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  INDEX `fk_COMENTARIOS_VIDEO1_idx` (`VIDEO_id_video` ASC) VISIBLE,
  CONSTRAINT `fk_COMENTARIOS_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_COMENTARIOS_VIDEO1`
    FOREIGN KEY (`VIDEO_id_video`)
    REFERENCES `Youtube`.`VIDEO` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`ETIQUETAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`ETIQUETAS` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`ETIQUETAS` (
  `id_etiquetas` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_etiquetas`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`ME_GUSTA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`ME_GUSTA` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`ME_GUSTA` (
  `COMENTARIOS_id_comentario` INT NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  `like` INT NOT NULL,
  `dia_hora` DATETIME NOT NULL,
  PRIMARY KEY (`COMENTARIOS_id_comentario`, `USUARIOS_id_usuario`),
  INDEX `fk_COMENTARIOS_has_USUARIOS_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  INDEX `fk_COMENTARIOS_has_USUARIOS_COMENTARIOS1_idx` (`COMENTARIOS_id_comentario` ASC) VISIBLE,
  CONSTRAINT `fk_COMENTARIOS_has_USUARIOS_COMENTARIOS1`
    FOREIGN KEY (`COMENTARIOS_id_comentario`)
    REFERENCES `Youtube`.`COMENTARIOS` (`id_comentario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_COMENTARIOS_has_USUARIOS_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`PLAYLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`PLAYLIST` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`PLAYLIST` (
  `id_playlist` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `fecha_creacion` DATE NOT NULL,
  `estado` ENUM("publica", "privada") NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_playlist`),
  INDEX `fk_PLAYLIST_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_PLAYLIST_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`SUSCRIBE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`SUSCRIBE` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`SUSCRIBE` (
  `USUARIOS_id_usuario` INT NOT NULL,
  `CANAL_id_canal` INT NOT NULL,
  PRIMARY KEY (`USUARIOS_id_usuario`, `CANAL_id_canal`),
  INDEX `fk_USUARIOS_has_CANAL_CANAL1_idx` (`CANAL_id_canal` ASC) VISIBLE,
  INDEX `fk_USUARIOS_has_CANAL_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_USUARIOS_has_CANAL_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIOS_has_CANAL_CANAL1`
    FOREIGN KEY (`CANAL_id_canal`)
    REFERENCES `Youtube`.`CANAL` (`id_canal`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`TIENE_ETIQUETAS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`TIENE_ETIQUETAS` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`TIENE_ETIQUETAS` (
  `VIDEO_id_video` INT NOT NULL,
  `ETIQUETAS_id_etiquetas` INT NOT NULL,
  PRIMARY KEY (`VIDEO_id_video`, `ETIQUETAS_id_etiquetas`),
  INDEX `fk_VIDEO_has_ETIQUETAS_ETIQUETAS1_idx` (`ETIQUETAS_id_etiquetas` ASC) VISIBLE,
  INDEX `fk_VIDEO_has_ETIQUETAS_VIDEO1_idx` (`VIDEO_id_video` ASC) VISIBLE,
  CONSTRAINT `fk_VIDEO_has_ETIQUETAS_VIDEO1`
    FOREIGN KEY (`VIDEO_id_video`)
    REFERENCES `Youtube`.`VIDEO` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VIDEO_has_ETIQUETAS_ETIQUETAS1`
    FOREIGN KEY (`ETIQUETAS_id_etiquetas`)
    REFERENCES `Youtube`.`ETIQUETAS` (`id_etiquetas`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`TIENE_PLAYLIST`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`TIENE_PLAYLIST` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`TIENE_PLAYLIST` (
  `VIDEO_id_video` INT NOT NULL,
  `PLAYLIST_id_playlist` INT NOT NULL,
  PRIMARY KEY (`VIDEO_id_video`, `PLAYLIST_id_playlist`),
  INDEX `fk_VIDEO_has_PLAYLIST_PLAYLIST1_idx` (`PLAYLIST_id_playlist` ASC) VISIBLE,
  INDEX `fk_VIDEO_has_PLAYLIST_VIDEO1_idx` (`VIDEO_id_video` ASC) VISIBLE,
  CONSTRAINT `fk_VIDEO_has_PLAYLIST_VIDEO1`
    FOREIGN KEY (`VIDEO_id_video`)
    REFERENCES `Youtube`.`VIDEO` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_VIDEO_has_PLAYLIST_PLAYLIST1`
    FOREIGN KEY (`PLAYLIST_id_playlist`)
    REFERENCES `Youtube`.`PLAYLIST` (`id_playlist`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`USUARIOS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`USUARIOS` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`USUARIOS` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `password` VARCHAR(45) NULL,
  `nom` VARCHAR(45) NOT NULL,
  `fecha_nacimiento` DATE NOT NULL,
  `sexo` CHAR(1) NULL,
  `pais` VARCHAR(20) NOT NULL,
  `codigo_postal` VARCHAR(5) NULL,
  PRIMARY KEY (`id_usuario`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`VALORAR_VIDEO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`VALORAR_VIDEO` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`VALORAR_VIDEO` (
  `USUARIOS_id_usuario` INT NOT NULL,
  `VIDEO_id_video` INT NOT NULL,
  `like` INT NOT NULL DEFAULT 0,
  `fecha` DATETIME NOT NULL,
  PRIMARY KEY (`USUARIOS_id_usuario`, `VIDEO_id_video`),
  INDEX `fk_USUARIOS_has_VIDEO_VIDEO1_idx` (`VIDEO_id_video` ASC) VISIBLE,
  INDEX `fk_USUARIOS_has_VIDEO_USUARIOS1_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_USUARIOS_has_VIDEO_USUARIOS1`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USUARIOS_has_VIDEO_VIDEO1`
    FOREIGN KEY (`VIDEO_id_video`)
    REFERENCES `Youtube`.`VIDEO` (`id_video`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Youtube`.`VIDEO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Youtube`.`VIDEO` ;

CREATE TABLE IF NOT EXISTS `Youtube`.`VIDEO` (
  `id_video` INT NOT NULL AUTO_INCREMENT,
  `titulo` VARCHAR(45) NOT NULL,
  `descripcion` VARCHAR(45) NOT NULL,
  `tamano` INT NOT NULL,
  `nom_fichero` VARCHAR(45) NULL,
  `duracion` INT NOT NULL,
  `thumbnail` VARCHAR(45) NOT NULL,
  `num_reproducciones` INT NULL,
  `num_likes` INT NULL,
  `num_dislkes` INT NULL,
  `estados` ENUM("public", "oculto", "privado") NOT NULL,
  `USUARIOS_id_usuario` INT NOT NULL,
  `dia_hora_publicacion` DATETIME NOT NULL,
  PRIMARY KEY (`id_video`),
  INDEX `fk_VIDEO_USUARIOS_idx` (`USUARIOS_id_usuario` ASC) VISIBLE,
  CONSTRAINT `fk_VIDEO_USUARIOS`
    FOREIGN KEY (`USUARIOS_id_usuario`)
    REFERENCES `Youtube`.`USUARIOS` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
